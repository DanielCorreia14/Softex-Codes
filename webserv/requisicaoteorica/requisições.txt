Na requisição, é onde será feito o envio e/ou a requisição de dados para o servidor. Por exemplo, enviar o login e a senha de um usuário e o servidor retornará através da Resposta se aquele usuário é válido ou não. Ou então, outro exemplo bastante recorrente é o streaming de arquivos.


Metódos de requisições:
GET

Esse método é o mais utilizado, tem a função de solicitar ou requisitar algum recurso ao servidor. É geralmente usado para o retorno de informações sobre uma entidade especificamente ou uma lista delas, mas quando trata-se sobre arquivos muito extensos como listas de dados, é preciso que fique atento sobre a performance da API, e usa-se o conceito de Paginação, que é preferir mostrar a informação repartida em páginas, do que mostrar ela completa de uma vez só, ampliando assim a velocidade de tempo de resposta da API.

POST

Método usado para enviar informações ao servidor, é utilizado de forma mais popular em cadastros de dados retirados de um formulário, e também quando enviamos um arquivo para o servidor: seja isso uma foto de perfil, um post no Instagram, tudo isso é usado o método POST.

PUT

O PUT é responsável por editar arquivos e informações já existentes. Esse método usa-se juntamente com um parâmetro na URL da requisição, que ajudará a identificar através de uma chave única (id) qual elemento ele está referenciando.

DELETE

Esse método é bem autoexplicativo, deleta arquivos ou informações presentes no banco de dados. Igual o PUT, é recomendável que utilize-o usando um parâmetro na URL da requisição, para que evite problemas de deletar dois arquivos/informações ao mesmo tempo.

Os a seguir não sao muito utilizados, mas existem:


HEAD

Esse método é muito similar com o GET, a diferença é que esse retorna apenas o cabeçalho da resposta, enquanto o GET retorna tanto o cabeçalho quanto o corpo da resposta.

OPTIONS

É responsável por retornar as informações referentes ao servidor. Esse método é muitíssimo importante para ferramentas de deploy como o Heroku, pois ele pega todas as informações necessárias para o deploy de forma automática por meio desse método, o que facilita a vida do programador.

TRACE

Funciona bem mais como uma ferramenta de debug para as API ‘s. Ele reenvia a última requisição para o servidor e verifica se houve alguma interferência de servidores de terceiros.

CONNECT

Dentre os métodos, esse é o mais específico e impopular, é responsável por conectar a API com algum servidor proxy. É mais utilizado para tentar a conexão com sites que possuem segurança e que não permitem conexão direta, dessa forma, é preciso que se conecte a um servidor proxy para depois conseguir acessar seu destino.
